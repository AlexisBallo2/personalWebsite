{"ast":null,"code":"var _jsxFileName = \"/Users/apb/Coding/base/src/components/Portfolio.jsx\";\nimport Nav from \"../Nav\";\nimport Helmet from \"react-helmet\";\nimport React from \"react\"; //import Canvas from \"./Canvas\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar box_height = 15;\nvar box_width = 15;\n\nclass Rectangle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get cords() {\n    return [this.x, this.y, this.x + box_width, this.y + box_height];\n  }\n\n}\n\nvar cur_rects = createRects();\n\nclass Canvas extends React.Component {\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    ctx.font = \"40px Courier\";\n    ctx.fillText(this.props.text, 210, 75);\n    drawRects(ctx, cur_rects);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: \"canvas\",\n        width: 640,\n        height: 425\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction createRects() {\n  var rects = [];\n\n  for (var row = 0; row < 10; row++) {\n    var rects_add = [];\n\n    for (var spot = 0; spot < 10; spot++) {\n      rects_add.push(new Rectangle(30 * spot, 30 * row));\n    }\n\n    rects.push(rects_add);\n  }\n\n  return rects;\n}\n\nfunction drawRects(ctx, cur_rects) {\n  for (const i of cur_rects) {\n    for (const j of i) {\n      ctx.fillStyle = \"white\";\n      ctx.beginPath();\n      ctx.rect(j.x, j.y, 15, 15);\n      ctx.fill();\n    }\n  }\n}\n\nexport default function Portfolio() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["Nav","Helmet","React","box_height","box_width","Rectangle","constructor","x","y","cords","cur_rects","createRects","Canvas","Component","componentDidMount","canvas","refs","ctx","getContext","drawImage","img","font","fillText","props","text","drawRects","render","rects","row","rects_add","spot","push","i","j","fillStyle","beginPath","rect","fill","Portfolio"],"sources":["/Users/apb/Coding/base/src/components/Portfolio.jsx"],"sourcesContent":["import Nav from \"../Nav\";\nimport Helmet from \"react-helmet\";\nimport React from \"react\";\n//import Canvas from \"./Canvas\";\n\nvar box_height = 15;\nvar box_width = 15;\nclass Rectangle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  get cords() {\n    return [this.x, this.y, this.x + box_width, this.y + box_height];\n  }\n}\nvar cur_rects = createRects();\n\nclass Canvas extends React.Component {\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.drawImage(img, 0, 0);\n    ctx.font = \"40px Courier\";\n    ctx.fillText(this.props.text, 210, 75);\n    drawRects(ctx, cur_rects);\n  }\n  render() {\n    return (\n      <div>\n        <canvas ref=\"canvas\" width={640} height={425} />\n      </div>\n    );\n  }\n}\n\nfunction createRects() {\n  var rects = [];\n  for (var row = 0; row < 10; row++) {\n    var rects_add = [];\n    for (var spot = 0; spot < 10; spot++) {\n      rects_add.push(new Rectangle(30 * spot, 30 * row));\n    }\n    rects.push(rects_add);\n  }\n  return rects;\n}\n\nfunction drawRects(ctx, cur_rects) {\n  for (const i of cur_rects) {\n    for (const j of i) {\n      ctx.fillStyle = \"white\";\n      ctx.beginPath();\n      ctx.rect(j.x, j.y, 15, 15);\n      ctx.fill();\n    }\n  }\n}\n\nexport default function Portfolio() {\n  return (\n    <div>\n      <Nav />\n      <Canvas />\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,SAAS,GAAG,EAAhB;;AACA,MAAMC,SAAN,CAAgB;EACdC,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAO;IAChB,KAAKD,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAT;EACD;;EACQ,IAALC,KAAK,GAAG;IACV,OAAO,CAAC,KAAKF,CAAN,EAAS,KAAKC,CAAd,EAAiB,KAAKD,CAAL,GAASH,SAA1B,EAAqC,KAAKI,CAAL,GAASL,UAA9C,CAAP;EACD;;AAPa;;AAShB,IAAIO,SAAS,GAAGC,WAAW,EAA3B;;AAEA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;EACnCC,iBAAiB,GAAG;IAClB,MAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;IACA,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;IAEAD,GAAG,CAACE,SAAJ,CAAcC,GAAd,EAAmB,CAAnB,EAAsB,CAAtB;IACAH,GAAG,CAACI,IAAJ,GAAW,cAAX;IACAJ,GAAG,CAACK,QAAJ,CAAa,KAAKC,KAAL,CAAWC,IAAxB,EAA8B,GAA9B,EAAmC,EAAnC;IACAC,SAAS,CAACR,GAAD,EAAMP,SAAN,CAAT;EACD;;EACDgB,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QAAQ,GAAG,EAAC,QAAZ;QAAqB,KAAK,EAAE,GAA5B;QAAiC,MAAM,EAAE;MAAzC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AAhBkC;;AAmBrC,SAASf,WAAT,GAAuB;EACrB,IAAIgB,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;IACjC,IAAIC,SAAS,GAAG,EAAhB;;IACA,KAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG,EAA1B,EAA8BA,IAAI,EAAlC,EAAsC;MACpCD,SAAS,CAACE,IAAV,CAAe,IAAI1B,SAAJ,CAAc,KAAKyB,IAAnB,EAAyB,KAAKF,GAA9B,CAAf;IACD;;IACDD,KAAK,CAACI,IAAN,CAAWF,SAAX;EACD;;EACD,OAAOF,KAAP;AACD;;AAED,SAASF,SAAT,CAAmBR,GAAnB,EAAwBP,SAAxB,EAAmC;EACjC,KAAK,MAAMsB,CAAX,IAAgBtB,SAAhB,EAA2B;IACzB,KAAK,MAAMuB,CAAX,IAAgBD,CAAhB,EAAmB;MACjBf,GAAG,CAACiB,SAAJ,GAAgB,OAAhB;MACAjB,GAAG,CAACkB,SAAJ;MACAlB,GAAG,CAACmB,IAAJ,CAASH,CAAC,CAAC1B,CAAX,EAAc0B,CAAC,CAACzB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB;MACAS,GAAG,CAACoB,IAAJ;IACD;EACF;AACF;;AAED,eAAe,SAASC,SAAT,GAAqB;EAClC,oBACE;IAAA,wBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;KAPuBA,S"},"metadata":{},"sourceType":"module"}