{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; // Path2D for a Heart SVG\n\nconst heartSVG = \"M0 200 v-200 h200 a100,100 90 0,1 0,200 a100,100 90 0,1 -200,0 z\";\nconst SVG_PATH = new Path2D(heartSVG); // Scaling Constants for Canvas\n\nconst SCALE = 0;\nconst OFFSET = 1;\nexport const canvasWidth = 10;\nexport const canvasHeight = 10;\nexport function draw(ctx, location) {\n  console.log(\"attempting to draw\");\n  ctx.fillStyle = \"red\";\n  ctx.shadowColor = \"blue\";\n  ctx.shadowBlur = 15;\n  ctx.save();\n  ctx.scale(SCALE, SCALE);\n  ctx.translate(location.x / SCALE - OFFSET, location.y / SCALE - OFFSET);\n  ctx.rotate(225 * Math.PI / 180);\n  ctx.fill(SVG_PATH); // .restore(): Canvas 2D API restores the most recently saved canvas state\n\n  ctx.restore();\n}\nexport function useCanvas() {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [coordinates, setCoordinates] = useState([]);\n  useEffect(() => {\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext(\"2d\"); // clear the canvas area before rendering the coordinates held in state\n\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight); // draw all coordinates held in state\n\n    coordinates.forEach(coordinate => {\n      draw(ctx, coordinate);\n    });\n  });\n  return [coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight];\n}\n\n_s(useCanvas, \"gQRsB0F61OVScRprtfqpPz8qTa8=\");","map":{"version":3,"names":["React","useState","useEffect","useRef","heartSVG","SVG_PATH","Path2D","SCALE","OFFSET","canvasWidth","canvasHeight","draw","ctx","location","console","log","fillStyle","shadowColor","shadowBlur","save","scale","translate","x","y","rotate","Math","PI","fill","restore","useCanvas","canvasRef","coordinates","setCoordinates","canvasObj","current","getContext","clearRect","forEach","coordinate"],"sources":["/Users/apb/Coding/aballo-website/src/hooks/useCanvas.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\n// Path2D for a Heart SVG\nconst heartSVG =\n  \"M0 200 v-200 h200 a100,100 90 0,1 0,200 a100,100 90 0,1 -200,0 z\";\nconst SVG_PATH = new Path2D(heartSVG);\n\n// Scaling Constants for Canvas\nconst SCALE = 0;\nconst OFFSET = 1;\nexport const canvasWidth = 10;\nexport const canvasHeight = 10;\n\nexport function draw(ctx, location) {\n  console.log(\"attempting to draw\");\n  ctx.fillStyle = \"red\";\n  ctx.shadowColor = \"blue\";\n  ctx.shadowBlur = 15;\n  ctx.save();\n  ctx.scale(SCALE, SCALE);\n  ctx.translate(location.x / SCALE - OFFSET, location.y / SCALE - OFFSET);\n  ctx.rotate((225 * Math.PI) / 180);\n  ctx.fill(SVG_PATH);\n  // .restore(): Canvas 2D API restores the most recently saved canvas state\n  ctx.restore();\n}\n\nexport function useCanvas() {\n  const canvasRef = useRef(null);\n  const [coordinates, setCoordinates] = useState([]);\n\n  useEffect(() => {\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext(\"2d\");\n    // clear the canvas area before rendering the coordinates held in state\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // draw all coordinates held in state\n    coordinates.forEach((coordinate) => {\n      draw(ctx, coordinate);\n    });\n  });\n\n  return [coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight];\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CAEA;;AACA,MAAMC,QAAQ,GACZ,kEADF;AAEA,MAAMC,QAAQ,GAAG,IAAIC,MAAJ,CAAWF,QAAX,CAAjB,C,CAEA;;AACA,MAAMG,KAAK,GAAG,CAAd;AACA,MAAMC,MAAM,GAAG,CAAf;AACA,OAAO,MAAMC,WAAW,GAAG,EAApB;AACP,OAAO,MAAMC,YAAY,GAAG,EAArB;AAEP,OAAO,SAASC,IAAT,CAAcC,GAAd,EAAmBC,QAAnB,EAA6B;EAClCC,OAAO,CAACC,GAAR,CAAY,oBAAZ;EACAH,GAAG,CAACI,SAAJ,GAAgB,KAAhB;EACAJ,GAAG,CAACK,WAAJ,GAAkB,MAAlB;EACAL,GAAG,CAACM,UAAJ,GAAiB,EAAjB;EACAN,GAAG,CAACO,IAAJ;EACAP,GAAG,CAACQ,KAAJ,CAAUb,KAAV,EAAiBA,KAAjB;EACAK,GAAG,CAACS,SAAJ,CAAcR,QAAQ,CAACS,CAAT,GAAaf,KAAb,GAAqBC,MAAnC,EAA2CK,QAAQ,CAACU,CAAT,GAAahB,KAAb,GAAqBC,MAAhE;EACAI,GAAG,CAACY,MAAJ,CAAY,MAAMC,IAAI,CAACC,EAAZ,GAAkB,GAA7B;EACAd,GAAG,CAACe,IAAJ,CAAStB,QAAT,EATkC,CAUlC;;EACAO,GAAG,CAACgB,OAAJ;AACD;AAED,OAAO,SAASC,SAAT,GAAqB;EAAA;;EAC1B,MAAMC,SAAS,GAAG3B,MAAM,CAAC,IAAD,CAAxB;EACA,MAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC,EAAD,CAA9C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAGH,SAAS,CAACI,OAA5B;IACA,MAAMtB,GAAG,GAAGqB,SAAS,CAACE,UAAV,CAAqB,IAArB,CAAZ,CAFc,CAGd;;IACAvB,GAAG,CAACwB,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB3B,WAApB,EAAiCC,YAAjC,EAJc,CAMd;;IACAqB,WAAW,CAACM,OAAZ,CAAqBC,UAAD,IAAgB;MAClC3B,IAAI,CAACC,GAAD,EAAM0B,UAAN,CAAJ;IACD,CAFD;EAGD,CAVQ,CAAT;EAYA,OAAO,CAACP,WAAD,EAAcC,cAAd,EAA8BF,SAA9B,EAAyCrB,WAAzC,EAAsDC,YAAtD,CAAP;AACD;;GAjBemB,S"},"metadata":{},"sourceType":"module"}